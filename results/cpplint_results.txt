./app/main.cpp:11:  Found C system header after other header. Should be: main.h, c system, c++ system, other.  [build/include_order] [4]
./app/main.cpp:18:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./app/preprocess.cpp:24:  Is this a non-const reference? If so, make const or use a pointer: cv::Mat &inImg  [runtime/references] [2]
./app/preprocess.cpp:24:  Is this a non-const reference? If so, make const or use a pointer: cv::Mat &outImg  [runtime/references] [2]
./app/robot.cpp:11:  Found C system header after other header. Should be: robot.h, c system, c++ system, other.  [build/include_order] [4]
./include/depthEstimator.hpp:25:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]
./include/detTrack.hpp:12:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
./include/detTrack.hpp:21:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
./include/detTrack.hpp:21:  Add #include <string> for string  [build/include_what_you_use] [4]
./include/detTrack.hpp:25:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]
./include/ioHandler.hpp:11:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
./include/ioHandler.hpp:33:  Add #include <vector> for vector<>  [build/include_what_you_use] [4]
./include/ioHandler.hpp:35:  Add #include <string> for string  [build/include_what_you_use] [4]
./include/preprocess.hpp:18:  Add #include <utility> for pair<>  [build/include_what_you_use] [4]
./include/robot.hpp:16:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
./include/robot.hpp:17:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
./include/robot.hpp:30:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]
./include/robot.hpp:30:  Add #include <string> for string  [build/include_what_you_use] [4]
./include/transformation.hpp:11:  Do not use namespace using-directives.  Use using-declarations instead.  [build/namespaces] [5]
./test/detectAndTracking.cpp:22:  At least two spaces is best between code and comments  [whitespace/comments] [2]
./test/detectAndTracking.cpp:36:  Redundant blank line at the start of a code block should be deleted.  [whitespace/blank_line] [2]
./test/detectAndTracking.cpp:36:  Redundant blank line at the end of a code block should be deleted.  [whitespace/blank_line] [3]
./test/detectAndTracking.cpp:37:  At least two spaces is best between code and comments  [whitespace/comments] [2]
./test/detectAndTracking.cpp:45:  At least two spaces is best between code and comments  [whitespace/comments] [2]
./test/detectAndTracking.cpp:88:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./test/detectAndTracking.cpp:125:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./test/detectAndTracking.cpp:125:  At least two spaces is best between code and comments  [whitespace/comments] [2]
./test/detectAndTracking.cpp:127:  Lines should be <= 80 characters long  [whitespace/line_length] [2]
./test/detectAndTracking.cpp:127:  At least two spaces is best between code and comments  [whitespace/comments] [2]
./test/estimatingDepth.cpp:13:  Found C system header after other header. Should be: estimatingDepth.h, c system, c++ system, other.  [build/include_order] [4]
./test/ioHandling.cpp:12:  Found C system header after other header. Should be: ioHandling.h, c system, c++ system, other.  [build/include_order] [4]
./test/preprocessing.cpp:12:  Found C system header after other header. Should be: preprocessing.h, c system, c++ system, other.  [build/include_order] [4]
./test/robot.cpp:12:  Found C system header after other header. Should be: robot.h, c system, c++ system, other.  [build/include_order] [4]
./test/robot.cpp:38:  Could not find a newline character at the end of the file.  [whitespace/ending_newline] [5]
./test/transforming.cpp:12:  Found C system header after other header. Should be: transforming.h, c system, c++ system, other.  [build/include_order] [4]
